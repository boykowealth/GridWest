---
title: "GridWest Documentation"
author: Brayden Boyko
format:
  html:
    code_folding: hide
    self_contained: true
    toc: true
    search: true
    dev: "png"
    fig_embed: true
    embed-resources: true
execute:
  echo: false
---

The GridWest Data Package is a comprehensive Python library designed to streamline access and processing of historical and real-time electricity market data across Western North America. This package currently supports data retrieval and management for four key regions:

+ Alberta (AESO)
+ Saskatchewan (SaskPower)
+ British Columbia (BC Hydro / BC Utilities)
+ Montana (NorthWestern Energy / MISO)

It provides traders, analysts, and energy professionals with easy-to-use functions to pull, clean, and analyze power market time-series data crucial for trading, risk management, and operational decision-making.

## Purpose

Developed specifically for Western Power Traders, this package condenses disparate data sources into consistent, ready-to-use Pandas DataFrames. It handles the unique formatting quirks, timestamp conversions, and dataset variations found across different regional market operators.

Whether you're assessing historical price trends, load forecasts, or ancillary service reports, this package saves you significant time and effort by automating data retrieval and preprocessing.

## Package Modules

+ __Alberta (gridwest.ab):__ Accesses AESO (Alberta Electric System Operator) historical and operational reports. Handles multiple report types with varying date/time formats. Provides flexible querying by report name and date range.
+ __Saskatchewan (gridwest.sk):__ Interfaces with SaskPower's public data portals and report feeds. Standardizes load, generation, and price datasets. Supports time-series extraction and cleaning.
+ __British Columbia (gridwest.bc):__ Pulls data from BC Hydro and BC Utilities commission sources. Manages multiple data formats and interval types. Converts timestamps and adjusts for time zone differences.
+ __Montana (gridwest.mt):__ Connects to NorthWestern Energy and MISO public datasets.Aggregates generation, demand, and pricing information. Normalizes data for use in cross-border market analysis.

## Installation

```
pip install gridwest
```

## Contact

Brayden Boyko

Email: braydenboyko@boykowealth.com

## License

The following project is made available under the GPL.


## Alberta AESO

### history()

This module provides functionality to query and process historical time-series data from the Alberta Electric System Operator (AESO). It leverages AESO's CSV export endpoints and dynamically handles formatting of date and time data based on the report type.

#### `from gridwest.ab import history`

__Function:__ history(reportName, startDate, endDate)

Fetches and processes historical data from AESO for a specified report and date range.

+ reportName (str): The name of the AESO report you wish to retrieve.
+ startDate (str): Start date in the format 'mmddyyyy'.
+ endDate (str): End date in the format 'mmddyyyy'.

__Returns:__

(pandas.DataFrame): A DataFrame containing the data from the requested report.


#### Example 1: Pull secondary offer price limit data

`history(reportName='Secondary Offer Price Limit', startDate='05012025', endDate='06022025')`

#### Example 2: Retrieve historical pool price data

`history(reportName='Pool Price', startDate='01012025', endDate='01312025')`

#### Example 3: Retrieve TMR reference prices

`history(reportName='TMR Reference Price', startDate='02012025', endDate='02282025')`

#### Complete List of Historical Report Options

```{python}
import pandas as pd
import os
from tabulate import tabulate

df = pd.read_csv(r'https://raw.githubusercontent.com/boykowealth/GridWest/refs/heads/main/gridwest/map/abHistoricalMap.csv')
df = df[['Report', 'Operational', 'Category']]

tabulate(df, headers='keys', tablefmt='html')
```

### current()

This module provides functionality to query and process current time-series data from the Alberta Electric System Operator (AESO). It leverages AESO's CSV export endpoints and dynamically handles formatting of date and time data based on the report type.

#### `from gridwest.ab import current`

__Function:__ current(reportName)

Fetches and processes historical data from AESO for a specified report and date range.

+ reportName (str): The name of the AESO report you wish to retrieve.

__Returns:__

(pandas.DataFrame): A DataFrame containing the data from the requested report.


#### Example 1: Retrieve monthly outage data

`current(reportName='Monthly Outage')`

#### Example 2: Retrieve pool price data

`current(reportName='Pool Price')`

#### Example 3: Retrieve actual/forecast data

`current(reportName='Actual Forecast')`

#### Complete List of Current Report Options

```{python}
import pandas as pd
import os
from tabulate import tabulate

df = pd.read_csv(r'https://raw.githubusercontent.com/boykowealth/GridWest/refs/heads/main/gridwest/map/abCurrentMap.csv')
df = df[['Report', 'Operational', 'Category']]

tabulate(df, headers='keys', tablefmt='html')
```

### supplyForecasts()

This function retrieves 24-month supply and demand forecast data published by the Alberta Electric System Operator (AESO). The forecast data includes estimates for daily peak hour conditions over different future time horizons.

#### `from gridwest.ab import supplyForecasts`

__Function:__ supplyForecasts(reportName)

#### Valid Forecast Periods

+ '1-6': Daily Peak Hour (one month-six months)
+ '2-6': Daily Peak Hour (two months-six months)
+ '3-6': Daily Peak Hour (three months-six months)
+ '4-6': Daily Peak Hour (four months-six months)

#### Returns

pandas.DataFrame: A clean DataFrame containing the time series of forecasted supply and demand data.

#### Example: Retrieve the 4â€“6 Month Supply & Demand Forecast

`df = supplyForecasts('4-6')`